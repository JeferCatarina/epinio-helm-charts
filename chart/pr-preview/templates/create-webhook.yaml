apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-createwebhook
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "pr-preview.labels" . | nindent 4 }}
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - get
  - list
  - delete
  - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-createwebhook
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "pr-preview.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-createwebhook
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "pr-preview.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-createwebhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-createwebhook
  
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-webhook-{{ .Release.Name }}
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "pr-preview.labels" . | nindent 4 }}
spec:
  params:
  - name: ExternalDomain
    description: "The external domain for the EventListener e.g. `$(params.EventListenerName).<PROXYIP>.nip.io`"
  - name: GitHubUser
    description: "The GitHub user"
  - name: GitHubRepo
    description: "The GitHub repo where the webhook will be created"
  - name: GitHubOrg
    description: "The GitHub organization where the webhook will be created"
  - name: GitHubAccessToken
    description: "The GitHub access token"
  - name: GitHubDomain
    description: "The GitHub domain. Override for GitHub Enterprise"
    default: "github.com"
  - name: WebhookEvents
    description: "List of events the webhook will send notifications for"
    default: '[\"pull_request\"]'
  steps:
  - name: create-webhook
    image: curlimages/curl:latest
    command:
    - sh
    args:
    - -ce
    - |
      set -e
      echo "Create Webhook"
      if [ $(params.GitHubDomain) = "github.com" ];then
        curl -v -d "{\"name\": \"web\",\"active\": true,\"events\": $(params.WebhookEvents),\"config\": {\"url\": \"https://$(params.ExternalDomain)\",\"content_type\": \"json\",\"insecure_ssl\": \"1\" ,\"secret\": \"{{ .Release.Name }}\"}}" -X POST -u $(params.GitHubUser):$(params.GitHubAccessToken) -L https://api.github.com/repos/$(params.GitHubOrg)/$(params.GitHubRepo)/hooks
      else
        curl -d "{\"name\": \"web\",\"active\": true,\"events\": $(params.WebhookEvents),\"config\": {\"url\": \"https://$(params.ExternalDomain)/\",\"content_type\": \"json\",\"insecure_ssl\": \"1\" ,\"secret\": \"{{ .Release.Name }}\"}}" -X POST -u $(params.GitHubUser):$(params.GitHubAccessToken) -L https://$(params.GitHubDomain)/api/v3/repos/$(params.GitHubOrg)/$(params.GitHubRepo)/hooks
      fi
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: {{ .Release.Name }}-cr-whook
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "pr-preview.labels" . | nindent 4 }}
spec:
  taskRef:
    name: create-webhook-{{ .Release.Name }}
  params:
  - name: GitHubRepo
    value: {{ .Values.GithubRepo }}
  {{- if .Values.GithubOrganization }}
  - name: GitHubOrg
    value: {{ .Values.GithubOrganization }}
  {{- else }}
  - name: GitHubOrg
    value: {{ .Values.GithubUsername }}
  {{- end }}
  - name: GitHubUser
    value: {{ .Values.GithubUsername }}
  - name: GitHubAccessToken
    value: {{ .Values.GithubWebhookToken }}
  - name: ExternalDomain
    value: {{ .Release.Name }}.epinio.demo.stack.io
  timeout: 1000s
  serviceAccountName: {{ .Release.Name }}-createwebhook
